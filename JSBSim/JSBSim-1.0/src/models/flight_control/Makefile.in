# Makefile.in generated by automake 1.10.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@



VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
subdir = src/models/flight_control
DIST_COMMON = $(am__include_HEADERS_DIST) $(am__noinst_HEADERS_DIST) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
LIBRARIES = $(noinst_LIBRARIES)
libFlightControl_a_AR = $(AR) $(ARFLAGS)
libFlightControl_a_LIBADD =
am__libFlightControl_a_SOURCES_DIST = FGDeadBand.cpp \
	FGFCSComponent.cpp FGFilter.cpp FGGain.cpp FGKinemat.cpp \
	FGSummer.cpp FGSwitch.cpp FGFCSFunction.cpp FGSensor.cpp \
	FGPID.cpp FGActuator.cpp FGAccelerometer.cpp
am__objects_1 = FGDeadBand.$(OBJEXT) FGFCSComponent.$(OBJEXT) \
	FGFilter.$(OBJEXT) FGGain.$(OBJEXT) FGKinemat.$(OBJEXT) \
	FGSummer.$(OBJEXT) FGSwitch.$(OBJEXT) FGFCSFunction.$(OBJEXT) \
	FGSensor.$(OBJEXT) FGPID.$(OBJEXT) FGActuator.$(OBJEXT) \
	FGAccelerometer.$(OBJEXT)
@BUILD_LIBRARIES_FALSE@am_libFlightControl_a_OBJECTS =  \
@BUILD_LIBRARIES_FALSE@	$(am__objects_1)
libFlightControl_a_OBJECTS = $(am_libFlightControl_a_OBJECTS)
LTLIBRARIES = $(noinst_LTLIBRARIES)
libFlightControl_la_LIBADD =
am__libFlightControl_la_SOURCES_DIST = FGDeadBand.cpp \
	FGFCSComponent.cpp FGFilter.cpp FGGain.cpp FGKinemat.cpp \
	FGSummer.cpp FGSwitch.cpp FGFCSFunction.cpp FGSensor.cpp \
	FGPID.cpp FGActuator.cpp FGAccelerometer.cpp
am__objects_2 = libFlightControl_la-FGDeadBand.lo \
	libFlightControl_la-FGFCSComponent.lo \
	libFlightControl_la-FGFilter.lo libFlightControl_la-FGGain.lo \
	libFlightControl_la-FGKinemat.lo \
	libFlightControl_la-FGSummer.lo \
	libFlightControl_la-FGSwitch.lo \
	libFlightControl_la-FGFCSFunction.lo \
	libFlightControl_la-FGSensor.lo libFlightControl_la-FGPID.lo \
	libFlightControl_la-FGActuator.lo \
	libFlightControl_la-FGAccelerometer.lo
@BUILD_LIBRARIES_TRUE@am_libFlightControl_la_OBJECTS =  \
@BUILD_LIBRARIES_TRUE@	$(am__objects_2)
libFlightControl_la_OBJECTS = $(am_libFlightControl_la_OBJECTS)
libFlightControl_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(libFlightControl_la_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
@BUILD_LIBRARIES_TRUE@am_libFlightControl_la_rpath =
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libFlightControl_a_SOURCES) $(libFlightControl_la_SOURCES)
DIST_SOURCES = $(am__libFlightControl_a_SOURCES_DIST) \
	$(am__libFlightControl_la_SOURCES_DIST)
am__include_HEADERS_DIST = FGDeadBand.h FGFCSComponent.h FGFilter.h \
	FGGain.h FGKinemat.h FGSummer.h FGSwitch.h FGFCSFunction.h \
	FGSensor.h FGPID.h FGActuator.h FGAccelerometer.h
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(includedir)"
includeHEADERS_INSTALL = $(INSTALL_HEADER)
am__noinst_HEADERS_DIST = FGDeadBand.h FGFCSComponent.h FGFilter.h \
	FGGain.h FGKinemat.h FGSummer.h FGSwitch.h FGFCSFunction.h \
	FGSensor.h FGPID.h FGActuator.h FGAccelerometer.h
HEADERS = $(include_HEADERS) $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
ARFLAGS = @ARFLAGS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@/JSBSim/models/flight_control
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
to_host_path_cmd = @to_host_path_cmd@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
LIBRARY_SOURCES = FGDeadBand.cpp FGFCSComponent.cpp \
                            FGFilter.cpp FGGain.cpp FGKinemat.cpp \
                            FGSummer.cpp FGSwitch.cpp FGFCSFunction.cpp FGSensor.cpp \
                            FGPID.cpp FGActuator.cpp FGAccelerometer.cpp

LIBRARY_INCLUDES = FGDeadBand.h FGFCSComponent.h FGFilter.h \
                 FGGain.h FGKinemat.h FGSummer.h FGSwitch.h FGFCSFunction.h \
                 FGSensor.h FGPID.h FGActuator.h FGAccelerometer.h

@BUILD_LIBRARIES_TRUE@noinst_LTLIBRARIES = libFlightControl.la
@BUILD_LIBRARIES_TRUE@include_HEADERS = $(LIBRARY_INCLUDES)
@BUILD_LIBRARIES_TRUE@libFlightControl_la_SOURCES = $(LIBRARY_SOURCES)
@BUILD_LIBRARIES_TRUE@libFlightControl_la_CXXFLAGS = $(AM_CXXFLAGS)
@BUILD_LIBRARIES_FALSE@noinst_LIBRARIES = libFlightControl.a
@BUILD_LIBRARIES_FALSE@noinst_HEADERS = $(LIBRARY_INCLUDES)
@BUILD_LIBRARIES_FALSE@libFlightControl_a_SOURCES = $(LIBRARY_SOURCES)
INCLUDES = -I$(top_srcdir)/src -I../../
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/models/flight_control/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/models/flight_control/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
libFlightControl.a: $(libFlightControl_a_OBJECTS) $(libFlightControl_a_DEPENDENCIES) 
	-rm -f libFlightControl.a
	$(libFlightControl_a_AR) libFlightControl.a $(libFlightControl_a_OBJECTS) $(libFlightControl_a_LIBADD)
	$(RANLIB) libFlightControl.a

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libFlightControl.la: $(libFlightControl_la_OBJECTS) $(libFlightControl_la_DEPENDENCIES) 
	$(libFlightControl_la_LINK) $(am_libFlightControl_la_rpath) $(libFlightControl_la_OBJECTS) $(libFlightControl_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FGAccelerometer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FGActuator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FGDeadBand.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FGFCSComponent.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FGFCSFunction.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FGFilter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FGGain.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FGKinemat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FGPID.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FGSensor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FGSummer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FGSwitch.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libFlightControl_la-FGAccelerometer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libFlightControl_la-FGActuator.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libFlightControl_la-FGDeadBand.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libFlightControl_la-FGFCSComponent.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libFlightControl_la-FGFCSFunction.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libFlightControl_la-FGFilter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libFlightControl_la-FGGain.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libFlightControl_la-FGKinemat.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libFlightControl_la-FGPID.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libFlightControl_la-FGSensor.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libFlightControl_la-FGSummer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libFlightControl_la-FGSwitch.Plo@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

libFlightControl_la-FGDeadBand.lo: FGDeadBand.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFlightControl_la_CXXFLAGS) $(CXXFLAGS) -MT libFlightControl_la-FGDeadBand.lo -MD -MP -MF $(DEPDIR)/libFlightControl_la-FGDeadBand.Tpo -c -o libFlightControl_la-FGDeadBand.lo `test -f 'FGDeadBand.cpp' || echo '$(srcdir)/'`FGDeadBand.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libFlightControl_la-FGDeadBand.Tpo $(DEPDIR)/libFlightControl_la-FGDeadBand.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FGDeadBand.cpp' object='libFlightControl_la-FGDeadBand.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFlightControl_la_CXXFLAGS) $(CXXFLAGS) -c -o libFlightControl_la-FGDeadBand.lo `test -f 'FGDeadBand.cpp' || echo '$(srcdir)/'`FGDeadBand.cpp

libFlightControl_la-FGFCSComponent.lo: FGFCSComponent.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFlightControl_la_CXXFLAGS) $(CXXFLAGS) -MT libFlightControl_la-FGFCSComponent.lo -MD -MP -MF $(DEPDIR)/libFlightControl_la-FGFCSComponent.Tpo -c -o libFlightControl_la-FGFCSComponent.lo `test -f 'FGFCSComponent.cpp' || echo '$(srcdir)/'`FGFCSComponent.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libFlightControl_la-FGFCSComponent.Tpo $(DEPDIR)/libFlightControl_la-FGFCSComponent.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FGFCSComponent.cpp' object='libFlightControl_la-FGFCSComponent.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFlightControl_la_CXXFLAGS) $(CXXFLAGS) -c -o libFlightControl_la-FGFCSComponent.lo `test -f 'FGFCSComponent.cpp' || echo '$(srcdir)/'`FGFCSComponent.cpp

libFlightControl_la-FGFilter.lo: FGFilter.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFlightControl_la_CXXFLAGS) $(CXXFLAGS) -MT libFlightControl_la-FGFilter.lo -MD -MP -MF $(DEPDIR)/libFlightControl_la-FGFilter.Tpo -c -o libFlightControl_la-FGFilter.lo `test -f 'FGFilter.cpp' || echo '$(srcdir)/'`FGFilter.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libFlightControl_la-FGFilter.Tpo $(DEPDIR)/libFlightControl_la-FGFilter.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FGFilter.cpp' object='libFlightControl_la-FGFilter.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFlightControl_la_CXXFLAGS) $(CXXFLAGS) -c -o libFlightControl_la-FGFilter.lo `test -f 'FGFilter.cpp' || echo '$(srcdir)/'`FGFilter.cpp

libFlightControl_la-FGGain.lo: FGGain.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFlightControl_la_CXXFLAGS) $(CXXFLAGS) -MT libFlightControl_la-FGGain.lo -MD -MP -MF $(DEPDIR)/libFlightControl_la-FGGain.Tpo -c -o libFlightControl_la-FGGain.lo `test -f 'FGGain.cpp' || echo '$(srcdir)/'`FGGain.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libFlightControl_la-FGGain.Tpo $(DEPDIR)/libFlightControl_la-FGGain.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FGGain.cpp' object='libFlightControl_la-FGGain.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFlightControl_la_CXXFLAGS) $(CXXFLAGS) -c -o libFlightControl_la-FGGain.lo `test -f 'FGGain.cpp' || echo '$(srcdir)/'`FGGain.cpp

libFlightControl_la-FGKinemat.lo: FGKinemat.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFlightControl_la_CXXFLAGS) $(CXXFLAGS) -MT libFlightControl_la-FGKinemat.lo -MD -MP -MF $(DEPDIR)/libFlightControl_la-FGKinemat.Tpo -c -o libFlightControl_la-FGKinemat.lo `test -f 'FGKinemat.cpp' || echo '$(srcdir)/'`FGKinemat.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libFlightControl_la-FGKinemat.Tpo $(DEPDIR)/libFlightControl_la-FGKinemat.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FGKinemat.cpp' object='libFlightControl_la-FGKinemat.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFlightControl_la_CXXFLAGS) $(CXXFLAGS) -c -o libFlightControl_la-FGKinemat.lo `test -f 'FGKinemat.cpp' || echo '$(srcdir)/'`FGKinemat.cpp

libFlightControl_la-FGSummer.lo: FGSummer.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFlightControl_la_CXXFLAGS) $(CXXFLAGS) -MT libFlightControl_la-FGSummer.lo -MD -MP -MF $(DEPDIR)/libFlightControl_la-FGSummer.Tpo -c -o libFlightControl_la-FGSummer.lo `test -f 'FGSummer.cpp' || echo '$(srcdir)/'`FGSummer.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libFlightControl_la-FGSummer.Tpo $(DEPDIR)/libFlightControl_la-FGSummer.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FGSummer.cpp' object='libFlightControl_la-FGSummer.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFlightControl_la_CXXFLAGS) $(CXXFLAGS) -c -o libFlightControl_la-FGSummer.lo `test -f 'FGSummer.cpp' || echo '$(srcdir)/'`FGSummer.cpp

libFlightControl_la-FGSwitch.lo: FGSwitch.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFlightControl_la_CXXFLAGS) $(CXXFLAGS) -MT libFlightControl_la-FGSwitch.lo -MD -MP -MF $(DEPDIR)/libFlightControl_la-FGSwitch.Tpo -c -o libFlightControl_la-FGSwitch.lo `test -f 'FGSwitch.cpp' || echo '$(srcdir)/'`FGSwitch.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libFlightControl_la-FGSwitch.Tpo $(DEPDIR)/libFlightControl_la-FGSwitch.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FGSwitch.cpp' object='libFlightControl_la-FGSwitch.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFlightControl_la_CXXFLAGS) $(CXXFLAGS) -c -o libFlightControl_la-FGSwitch.lo `test -f 'FGSwitch.cpp' || echo '$(srcdir)/'`FGSwitch.cpp

libFlightControl_la-FGFCSFunction.lo: FGFCSFunction.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFlightControl_la_CXXFLAGS) $(CXXFLAGS) -MT libFlightControl_la-FGFCSFunction.lo -MD -MP -MF $(DEPDIR)/libFlightControl_la-FGFCSFunction.Tpo -c -o libFlightControl_la-FGFCSFunction.lo `test -f 'FGFCSFunction.cpp' || echo '$(srcdir)/'`FGFCSFunction.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libFlightControl_la-FGFCSFunction.Tpo $(DEPDIR)/libFlightControl_la-FGFCSFunction.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FGFCSFunction.cpp' object='libFlightControl_la-FGFCSFunction.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFlightControl_la_CXXFLAGS) $(CXXFLAGS) -c -o libFlightControl_la-FGFCSFunction.lo `test -f 'FGFCSFunction.cpp' || echo '$(srcdir)/'`FGFCSFunction.cpp

libFlightControl_la-FGSensor.lo: FGSensor.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFlightControl_la_CXXFLAGS) $(CXXFLAGS) -MT libFlightControl_la-FGSensor.lo -MD -MP -MF $(DEPDIR)/libFlightControl_la-FGSensor.Tpo -c -o libFlightControl_la-FGSensor.lo `test -f 'FGSensor.cpp' || echo '$(srcdir)/'`FGSensor.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libFlightControl_la-FGSensor.Tpo $(DEPDIR)/libFlightControl_la-FGSensor.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FGSensor.cpp' object='libFlightControl_la-FGSensor.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFlightControl_la_CXXFLAGS) $(CXXFLAGS) -c -o libFlightControl_la-FGSensor.lo `test -f 'FGSensor.cpp' || echo '$(srcdir)/'`FGSensor.cpp

libFlightControl_la-FGPID.lo: FGPID.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFlightControl_la_CXXFLAGS) $(CXXFLAGS) -MT libFlightControl_la-FGPID.lo -MD -MP -MF $(DEPDIR)/libFlightControl_la-FGPID.Tpo -c -o libFlightControl_la-FGPID.lo `test -f 'FGPID.cpp' || echo '$(srcdir)/'`FGPID.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libFlightControl_la-FGPID.Tpo $(DEPDIR)/libFlightControl_la-FGPID.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FGPID.cpp' object='libFlightControl_la-FGPID.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFlightControl_la_CXXFLAGS) $(CXXFLAGS) -c -o libFlightControl_la-FGPID.lo `test -f 'FGPID.cpp' || echo '$(srcdir)/'`FGPID.cpp

libFlightControl_la-FGActuator.lo: FGActuator.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFlightControl_la_CXXFLAGS) $(CXXFLAGS) -MT libFlightControl_la-FGActuator.lo -MD -MP -MF $(DEPDIR)/libFlightControl_la-FGActuator.Tpo -c -o libFlightControl_la-FGActuator.lo `test -f 'FGActuator.cpp' || echo '$(srcdir)/'`FGActuator.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libFlightControl_la-FGActuator.Tpo $(DEPDIR)/libFlightControl_la-FGActuator.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FGActuator.cpp' object='libFlightControl_la-FGActuator.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFlightControl_la_CXXFLAGS) $(CXXFLAGS) -c -o libFlightControl_la-FGActuator.lo `test -f 'FGActuator.cpp' || echo '$(srcdir)/'`FGActuator.cpp

libFlightControl_la-FGAccelerometer.lo: FGAccelerometer.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFlightControl_la_CXXFLAGS) $(CXXFLAGS) -MT libFlightControl_la-FGAccelerometer.lo -MD -MP -MF $(DEPDIR)/libFlightControl_la-FGAccelerometer.Tpo -c -o libFlightControl_la-FGAccelerometer.lo `test -f 'FGAccelerometer.cpp' || echo '$(srcdir)/'`FGAccelerometer.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libFlightControl_la-FGAccelerometer.Tpo $(DEPDIR)/libFlightControl_la-FGAccelerometer.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FGAccelerometer.cpp' object='libFlightControl_la-FGAccelerometer.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libFlightControl_la_CXXFLAGS) $(CXXFLAGS) -c -o libFlightControl_la-FGAccelerometer.lo `test -f 'FGAccelerometer.cpp' || echo '$(srcdir)/'`FGAccelerometer.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(includedir)" || $(MKDIR_P) "$(DESTDIR)$(includedir)"
	@list='$(include_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(includeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(includedir)/$$f'"; \
	  $(includeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(includedir)/$$f"; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(includedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(includedir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLIBRARIES \
	clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-includeHEADERS

install-dvi: install-dvi-am

install-exec-am:

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-includeHEADERS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLIBRARIES clean-noinstLTLIBRARIES \
	ctags distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am \
	install-includeHEADERS install-info install-info-am \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-includeHEADERS

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
